#+Title: Module basics
#+SETUPFILE: ../../reveal.setup

** Modules are pure system configuration

** Consider two scenarios

\\

   + Package A installs /etc/service.conf
   + Package B installs /etc/service.conf

   Does installing Package B yield an error?  Or is the config
   overwritten?  Can it be merged?

** 

Modules don't _exactly_ solve this problem, but they avoid it!

** Module basics

\\

   #+BEGIN_SRC nix
     # configuration.nix
     { pkgs, ... }:
     {
       fileSystems."/" = {
         device = "zpool/root";
         fsType = "zfs";
       };

       boot.loader.systemd-boot.enable = true;
       environment.systemPackages = [ pkgs.firefox ];

       time.timeZone = "Europe/Amsterdam";
       services.xserver = {
         enable = true;
         displayManager.gdm.enable = true;
         desktopManager.gnome.enable = true;
       };
     }
   #+END_SRC

** Finding options

\\

   + https://search.nixos.org/options
   + ~man configuration.nix~

** Module merging

\\

   #+BEGIN_SRC nix
     # a.nix
     { ... }: {
       config.services.nginx.enable = true;
     }
   #+END_SRC

   #+BEGIN_SRC nix
     # b.nix
     { ... }: {
       services.nginx = {
         user = "www";
         group = "uwu";
       };
     }
   #+END_SRC

   #+BEGIN_SRC nix
     { ... }: {
       imports = [ ./a.nix ./b.nix ];
     }
   #+END_SRC

** Module merging

\\

   #+BEGIN_SRC nix
     { 
       services = {
         nginx = {
           enable = true;
           user = "www";
           group = "uwu";
         };
       };
     }
   #+END_SRC

** Module merging #2

\\

   #+BEGIN_SRC nix
     # nanorc-1.nix
     {
       programs.nano.nanorc = ''
         set nowrap
       '';
     }
   #+END_SRC

   #+BEGIN_SRC nix
     # nanorc-2.nix
     {
       programs.nano.nanorc = ''
         set tabstospaces
         set tabsize 2
       '';
     }
   #+END_SRC

   #+BEGIN_SRC nix
     # nanorc-import.nix
     {
       imports = [
         ./nanorc-1.nix
         ./nanorc-2.nix
       ];
     }
   #+END_SRC
   
** Everything is a module!

\\

   + The semantics of Nix is assignments
   + All configuration involves modules

   #+BEGIN_SRC nix
     # configuration.nix
     { ... }:
     {
       imports = [
         ./hardware-configuration.nix
         ./my-packages.nix
       ];

       services = {
         nginx = {
           enable = true;
           user = "www";
           group = "uwu";
         };
       };
     }
   #+END_SRC

** configuration.nix isn't special!

\\

   #+BEGIN_SRC nix
     { ... }: {
       imports = [
         ./hardware-configuration.nix
         ./my-packages.nix
       ];

       config = {
         services = {
           nginx = {
             enable = true;
             user = "www";
             group = "uwu";
           };
         };
       };

       options = {};
     }
   #+END_SRC

** [[file:README.org][Back to index]]
