#+Title: Building a module abstraction
#+SETUPFILE: ../../reveal.setup

** A lot of modules generate configuration

\\

   + Pick a random config file (in INI, json, or yml format) from /etc
     on your computer
     + You can generate files in your home directory with home-manager
   + Create a custom module to generate it
     + ~lib.generators~ can help generate various file formats
     + ~lib.generators.toJSON { } { foo = 1; }~ results in ~{ "foo": 1 }~

** 

\\

   #+BEGIN_SRC nix
     { lib, config, ... }:
     with lib; # incule lib to cut down on boilerplate
     let cg = config.services.my-config-generator;
     in
     {
       options.services.my-config-generator = {
         enable = mkEnableOption "Enable config generator";

         etcName = mkOption { type = types.path; };

         default = {
           type = types.listOf (submodule {
             options = {
               type = lib.mkOption { type = lib.str; };
             };
           });
         };

         config = lib.mkIf cg.enable {
           environment.etc."${cg.etcName}".text = /* generate file here */
         };
       };
     }
   #+END_SRC

** 

