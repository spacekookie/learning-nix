#+Title: Flakes ‚ùÑÔ∏è & pinning sources üìå
#+SETUPFILE: ../../reveal.setup

** How to manage Nix dependencies?

\\

   + ~nix-channel~ :: impure; nixpkgs may change at any time
   + Local nixpkgs checkout :: this can be quite unreliable.
     Alternatively you can include a git-submodule or git-subtree in
     your configuration repository.
   + Niv :: Similar to flakes in a lot of ways, but much smaller in
     scope. Developed by community members
     https://github.com/nmattia/niv
   + Flakes :: The hot new shit that everyone is talking about

** Subtree & Submodule

\\

   + Lock a specific configuration state to a particular nixpkgs
     version.
   + Rolling back configuration _also_ rolls back nixpkgs
     automatically.
   + Subtrees _can_ be heavy on a repository, because the entire
     history is merged
     + They do potentially make upstream contributions easier though.

** Niv

\\

   + Developed by Nix community since 2019
   + Specify dependencies via ~sources.json~ file

   #+BEGIN_SRC json
     {
       "nixpkgs": {
           "branch": "nixos-unstable",
           "description": "Nix Packages collection",
           "homepage": "",
           "owner": "NixOS",
           "repo": "nixpkgs",
           "rev": "79d3ca08920364759c63fd3eb562e99c0c17044a",
           "sha256": "1zz72k161yl9dxs5nxgy5p6nh8zsz4fbpclm99r12jw39zrlzhhw",
           "type": "tarball",
           "url": "https://github.com/NixOS/nixpkgs/archive/79d3ca08920364759c63fd3eb562e99c0c17044a.tar.gz",
           "url_template": "https://github.com/<owner>/<repo>/archive/<rev>.tar.gz"
       }
     }
   #+END_SRC

** Niv

\\

   #+BEGIN_SRC nix
     { overlays ? [], ... } @ args:
     let
       sources = import nix/sources.nix;
       my-overlays = [ /* ... */ ];
     in
     import sources.nixpkgs(args // {
       overlays = overlays ++ my-overlays;
     })
   #+END_SRC

   #+BEGIN_SRC console
      ‚ù§ (theia) ~/sys> niv update nixpkgs
     Update nixpkgs-unstable
     Done: Update nixpkgs-unstable
   #+END_SRC

** Flakes

\\

   Flakes allow you to specify your Nix dependencies in a declarative
   way.

   #+BEGIN_SRC nix
     # flake.nix
     {
       inputs = {
         home-manager.url = "github:nix-community/home-manager";
       };
     }
   #+END_SRC

   #+BEGIN_SRC console
     ‚ù§ (theia) ~> nix flake lock --update-input home-manager
   #+END_SRC

** Flake inputs

\\

   #+BEGIN_SRC nix
     {
       description = "hello-flake";
       inputs = {
         nixpkgs.url = "github:NixOS/nixpkgs/nixos-unstable";
         home-manager = {
           url = "github:nix-community/home-manager";
           inputs.nixpkgs.follows = "nixpkgs";
         };
       };
     }
   #+END_SRC

** Flake outputs

\\

   #+BEGIN_SRC nix
     {
       # ...

       outputs = { self, nixpkgs, ... }:
         let system = "x86_64-linux";
         in
           {
             defaultPackage."${system}" = (import nixpkgs { inherit system; }).hello;
           };

     }
   #+END_SRC

** 

   #+BEGIN_SRC console
      ‚ù§ (theia) ~> nix flake lock
     ...

      ‚ù§ (theia) ~> ls
     flake.lock  flake.nix

      ‚ù§ (theia) ~> nix build

      ‚ù§ (theia) ~> ls
     flake.lock  flake.nix result

      ‚ù§ (theia) ~> result/bin/hello
     Hello, world!
   #+END_SRC

** 

   #+BEGIN_SRC nix
     {
       # ...

       outputs = { self, nixpkgs, home-manager, ... }:
         {
           nixosConfiguration."hyperion" = nixpkgs.lib.nixosSystem {
             system = "x86_64-linux";
             modules = [
               home-manager.nixosModules.home-manager
               ./roots/hyperion.nix
             ];
           };
         };
     }
   #+END_SRC

** ‚ö†Ô∏è Flakes are experimental

\\

   + Flakes are still being developed
     + https://github.com/NixOS/rfcs/pull/49 (initial RFC which didn't land)
     + Work ongoing behind ~--experimental-features flake~ argument
       + (or via ~nix.conf~ configuration file)
     + More RFCS: RFC#123, RFC#105, probably more to come :)
   + https://nixos.org/manual/nix/stable/command-ref/new-cli/nix3-flake.html#flake-references

** [[file:README.org][Back to index]]
